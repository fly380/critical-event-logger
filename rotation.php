<?php
/**
 * Critical Event Logger ‚Äî helper module
 * Copyright ¬© 2025 –ö–∞–∑–º—ñ—Ä—á—É–∫ –ê–Ω–¥—Ä—ñ–π
 * License: GPLv2 or later
 * License URI: https://www.gnu.org/licenses/gpl-2.0.html
 */

if (!defined('ABSPATH')) exit;

/**
 * –í–∏–∫–æ–Ω—É—î —Ä–æ—Ç–∞—Ü—ñ—é —Ç–∞ –æ—á–∏—â–µ–Ω–Ω—è –ª–æ–≥—ñ–≤
 * @param bool $force –ü—Ä–∏–º—É—Å–æ–≤–∞ —Ä–æ—Ç–∞—Ü—ñ—è (–¥–ª—è —Ä—É—á–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
 */
function crit_rotate_logs($force = false) {
	$log_dir  = plugin_dir_path(__FILE__) . 'logs/';
	$log_file = $log_dir . 'events.log';

	if (!file_exists($log_file)) {
		@file_put_contents($log_file, '[' . date('Y-m-d H:i:s') . "] [System][init][INFO] –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π –ª–æ–≥-—Ñ–∞–π–ª (–Ω–µ —ñ—Å–Ω—É–≤–∞–≤).\n");
		return;
	}

	$max_size_mb = get_option('crit_log_max_size', 5);   // –ú–ë
	$max_files   = get_option('crit_log_keep_files', 7); // –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä—Ö—ñ–≤—ñ–≤
	$max_days	= get_option('crit_log_max_days', 30);  // –¥–Ω—ñ–≤ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∑–∞–ø–∏—Å–∏

	$size_bytes = @filesize($log_file);
	$size_mb	= $size_bytes !== false ? round($size_bytes / (1024 * 1024), 2) : 0;
	$now		= current_time('Y-m-d-His');
	$rotated	= false;

	// === 1) –†–û–¢–ê–¶–Ü–Ø: —è–∫—â–æ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç, –∞–±–æ –ø—Ä–∏–º—É—Å–æ–≤–æ (—ñ —Ñ–∞–π–ª –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π) ===
	if ( ($force && $size_bytes > 0) || ($size_mb > $max_size_mb) ) {
		$new_name = $log_dir . 'events-' . $now . '.log';
		// —Å–ø—Ä–æ–±–∞ –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞—Ç–∏; —è–∫—â–æ –Ω—ñ ‚Äî –∫–æ–ø—ñ—è + –æ—á–∏—Å—Ç–∫–∞
		if (@rename($log_file, $new_name) === false) {
			@copy($log_file, $new_name);
			@file_put_contents($log_file, '');
		}
		@file_put_contents(
			$log_file,
			'[' . date('Y-m-d H:i:s') . "] [System][auto][INFO] –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π –ª–æ–≥-—Ñ–∞–π–ª –ø—ñ—Å–ª—è —Ä–æ—Ç–∞—Ü—ñ—ó.\n",
			FILE_APPEND | LOCK_EX
		);
		$rotated = true;

		// –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–π–≤—ñ –∞—Ä—Ö—ñ–≤–∏
		$all = glob($log_dir . 'events-*.log');
		if (is_array($all)) {
			usort($all, function($a, $b) { return filemtime($b) - filemtime($a); });
			$to_delete = array_slice($all, $max_files);
			foreach ($to_delete as $f) @unlink($f);
		}
	}

	// === 2) –û–ß–ò–°–¢–ö–ê: –≤–∏–¥–∞–ª–∏—Ç–∏ —Ä—è–¥–∫–∏ —Å—Ç–∞—Ä—à—ñ N –¥–Ω—ñ–≤ ===
	$lines = @file($log_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
	if ($lines) {
		$limit_ts  = time() - ($max_days * DAY_IN_SECONDS);
		$new_lines = [];
		foreach ($lines as $ln) {
			if (preg_match('/^\[(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})\]/', $ln, $m)) {
				$ts = strtotime($m[1]);
				if ($ts >= $limit_ts) $new_lines[] = $ln;
			} else {
				// —è–∫—â–æ —Ä—è–¥–æ–∫ –±–µ–∑ –¥–∞—Ç–∏ ‚Äî –∑–±–µ—Ä—ñ–≥–∞—î–º–æ
				$new_lines[] = $ln;
			}
		}
		@file_put_contents($log_file, implode("\n", $new_lines), LOCK_EX);
	}

	// === 3) –°–õ–£–ñ–ë–û–í–ï –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø –£ –õ–û–ì ===
	if ($rotated) {
		$msg = $force
			? '–í–∏–∫–æ–Ω–∞–Ω–æ –ø—Ä–∏–º—É—Å–æ–≤—É —Ä–æ—Ç–∞—Ü—ñ—é –ª–æ–≥—ñ–≤ (–∑–∞–ø—É—â–µ–Ω–æ –≤—Ä—É—á–Ω—É).'
			: '–í–∏–∫–æ–Ω–∞–Ω–æ —Ä–æ—Ç–∞—Ü—ñ—é –ª–æ–≥—ñ–≤ (–∞—Ä—Ö—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ).';
	} else {
		$msg = '–í–∏–∫–æ–Ω–∞–Ω–æ –æ—á–∏—â–µ–Ω–Ω—è –ª–æ–≥—ñ–≤ (—Å—Ç–∞—Ä—ñ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–∞–ª–µ–Ω–æ).';
	}
	@file_put_contents($log_file, '[' . date('Y-m-d H:i:s') . "][System][cron][INFO] $msg\n", FILE_APPEND | LOCK_EX);
}

// ===== Helpers (–≤—Å—Ç–∞–≤ –≤–∏—â–µ –∑–∞ crit_log_rotation_settings_page) =====
if (!function_exists('crit_human_bytes')) {
	function crit_human_bytes($bytes) {
		$bytes = (float) $bytes;
		$units = ['–ë','–ö–ë','–ú–ë','–ì–ë','–¢–ë'];
		$pow = $bytes > 0 ? floor(log($bytes, 1024)) : 0;
		$pow = max(0, min($pow, count($units)-1));
		$val = $bytes / (1024 ** $pow);
		return number_format_i18n($val, $pow >= 2 ? 2 : 0) . ' ' . $units[$pow];
	}
}


if (!function_exists('crit_render_sparkline')) {
	// –ü—Ä–æ—Å—Ç–∞ inline-SVG —Å–ø–∞—Ä–∫–ª–∞–π–Ω (–±–µ–∑ JS), —Å—É–º—ñ—Å–Ω–∞ –∑ PHP < 7.4
	function crit_render_sparkline(array $vals, $w = 180, $h = 40) {
		// 1) –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä –±–µ–∑ arrow function
		$vals = array_map('floatval', $vals);
		$vals = array_values(array_filter($vals, function($v){ return $v >= 0; }));
		if (!$vals) return '';

		$min = min($vals);
		$max = max($vals);
		if ($max <= 0) $max = 1;

		$n  = count($vals);
		$dx = ($n > 1) ? ($w / ($n - 1)) : 0;

		$points = array();
		for ($i = 0; $i < $n; $i++) {
			$x = $i * $dx;
			$norm = ($vals[$i] - $min) / (($max - $min) ?: 1);
			$y = $h - ($norm * $h);
			$points[] = $x . ',' . $y;
		}

		// –ü–æ–±—É–¥–æ–≤–∞ path –±–µ–∑ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞–ø—Ä—è–º—É
		$firstParts = explode(',', $points[0]);
		$path = 'M ' . $firstParts[0] . ' ' . $firstParts[1];
		for ($i = 1; $i < $n; $i++) {
			$pp = explode(',', $points[$i]);
			$path .= ' L ' . $pp[0] . ' ' . $pp[1];
		}

		$lastParts = explode(',', end($points));
		$lastX = $lastParts[0];
		$lastY = $lastParts[1];

		// Fallback –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ esc_attr –∑ —è–∫–æ—ó—Å—å –ø—Ä–∏—á–∏–Ω–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
		$esc = function_exists('esc_attr')
			? 'esc_attr'
			: function($s){ return htmlspecialchars($s, ENT_QUOTES, 'UTF-8'); };

		return '<svg width="'.intval($w).'" height="'.intval($h).'" viewBox="0 0 '.intval($w).' '.intval($h).'" preserveAspectRatio="none" role="img" aria-label="trend">'
			 . '<rect x="0" y="0" width="100%" height="100%" fill="none"></rect>'
			 . '<path d="'.$esc($path).'" fill="none" stroke="#3b82f6" stroke-width="2"></path>'
			 . '<circle cx="'.$esc($lastX).'" cy="'.$esc($lastY).'" r="2.5" fill="#1d4ed8"></circle>'
			 . '</svg>';
	}
}


/**
 * –ü–ª–∞–Ω—É—î–º–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —á–µ—Ä–µ–∑ WP-Cron (—â–æ–¥–æ–±–∏)
 */
if (!wp_next_scheduled('crit_daily_log_rotation')) {
	wp_schedule_event(time(), 'daily', 'crit_daily_log_rotation');
}
add_action('crit_daily_log_rotation', 'crit_rotate_logs');

/**
 * –ê–¥–º—ñ–Ω-–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
 */
add_action('admin_menu', function() {
	add_submenu_page(
		'critical-event-logs',
		'–†–æ—Ç–∞—Ü—ñ—è –ª–æ–≥—ñ–≤',
		'–†–æ—Ç–∞—Ü—ñ—è –ª–æ–≥—ñ–≤',
		'manage_options',
		'critical-log-rotation',
		'crit_log_rotation_settings_page'
	);
});

// ===== –ó–∞–º—ñ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å (–∫—Ä–∞—â–∞ –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è) =====
function crit_log_rotation_settings_page() {
	// Save
	if (isset($_POST['crit_save_rotation'])) {
		check_admin_referer('crit_log_rotation_save', 'crit_log_rotation_nonce');
		update_option('crit_log_max_size',  max(1, intval($_POST['crit_log_max_size'])));
		update_option('crit_log_keep_files',max(1, intval($_POST['crit_log_keep_files'])));
		update_option('crit_log_max_days',  max(1, intval($_POST['crit_log_max_days'])));
		echo '<div class="notice notice-success"><p>‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ.</p></div>';
	}

	$log_dir   = plugin_dir_path(__FILE__) . 'logs/';
	$log_file  = $log_dir . 'events.log';
	$size_opt  = max(1, (int) get_option('crit_log_max_size', 5)); // –ú–ë
	$keep_opt  = max(1, (int) get_option('crit_log_keep_files', 7));
	$days_opt  = max(1, (int) get_option('crit_log_max_days', 30));
	$size_limB = $size_opt * 1024 * 1024;

	$cur_bytes = @filesize($log_file);
	$cur_bytes = ($cur_bytes === false ? 0 : $cur_bytes);
	$cur_mb    = $cur_bytes / (1024*1024);
	$fill      = $size_limB > 0 ? min(100, round(($cur_bytes / $size_limB) * 100)) : 0;

	$archives = glob($log_dir . 'events-*.log') ?: [];
	usort($archives, static function($a,$b){ return filemtime($b) <=> filemtime($a); });
	$arch_count = count($archives);
	$arch_sizes = [];
	foreach (array_slice($archives, 0, 12) as $f) { $arch_sizes[] = (float) @filesize($f); }

	$last_rot_ts = $archives ? @filemtime($archives[0]) : 0;
	$next_cron   = wp_next_scheduled('crit_daily_log_rotation');

	// Warnings
	if ($cur_bytes >= $size_limB && $cur_bytes > 0) {
		echo '<div class="notice notice-warning"><p>‚ö†Ô∏è –ü–æ—Ç–æ—á–Ω–∏–π –ª–æ–≥ –ø–µ—Ä–µ–≤–∏—â—É—î –ª—ñ–º—ñ—Ç —ñ –º–∞—î –±—É—Ç–∏ —Ä–æ—Ç–æ–≤–∞–Ω–æ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.</p></div>';
	}

	// Styles
	echo '<style>
		.crit-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:12px;margin:14px 0}
		.crit-card{background:#fff;border:1px solid #e5e7eb;border-radius:10px;padding:12px}
		.crit-card h3{margin:0 0 6px;font-size:14px;font-weight:600}
		.crit-kpi{font-size:20px;font-weight:700;margin:2px 0 6px}
		.crit-sub{color:#64748b;font-size:12px}
		.crit-progress{height:10px;background:#f1f5f9;border-radius:999px;overflow:hidden;margin-top:8px}
		.crit-progress > span{display:block;height:100%;background:#3b82f6}
		.crit-bad > span{background:#ef4444}
		.crit-table{margin-top:10px}
		.crit-mono{font-family:monospace}
	</style>';

	echo '<div class="wrap"><h1>üóÇÔ∏è –†–æ—Ç–∞—Ü—ñ—è –ª–æ–≥—ñ–≤</h1>';

	// ===== KPI cards =====
	echo '<div class="crit-grid">';

	// –ü–æ—Ç–æ—á–Ω–∏–π —Ñ–∞–π–ª
	echo '<div class="crit-card">';
	echo '<h3>–ü–æ—Ç–æ—á–Ω–∏–π –ª–æ–≥-—Ñ–∞–π–ª</h3>';
	echo '<div class="crit-kpi">'.esc_html(crit_human_bytes($cur_bytes)).'</div>';
	echo '<div class="crit-sub">–õ—ñ–º—ñ—Ç: '.esc_html($size_opt).' –ú–ë</div>';
	$bar_class = $fill >= 95 ? 'crit-progress crit-bad' : 'crit-progress';
	echo '<div class="'.esc_attr($bar_class).'" aria-label="–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è"><span style="width:'.esc_attr($fill).'%;"></span></div>';
	echo '<div class="crit-sub">'.$fill.'% –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è</div>';
	echo '</div>';

	// –ê—Ä—Ö—ñ–≤–∏
	echo '<div class="crit-card">';
	echo '<h3>–ê—Ä—Ö—ñ–≤–∏</h3>';
	echo '<div class="crit-kpi">'.$arch_count.' / '.$keep_opt.'</div>';
	if ($last_rot_ts) {
		echo '<div class="crit-sub">–û—Å—Ç–∞–Ω–Ω—è —Ä–æ—Ç–∞—Ü—ñ—è: '.esc_html(date_i18n('Y-m-d H:i:s', $last_rot_ts)).'</div>';
	} else {
		echo '<div class="crit-sub">–©–µ –Ω–µ —Å—Ç–≤–æ—Ä—é–≤–∞–ª–∏—Å—è –∞—Ä—Ö—ñ–≤–∏</div>';
	}
	$svg = crit_render_sparkline($arch_sizes);
	if ($svg) {
		echo '<div style="margin-top:6px">'.$svg.'</div>';
		echo '<div class="crit-sub">–¢—Ä–µ–Ω–¥ —Ä–æ–∑–º—ñ—Ä—É –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∞—Ä—Ö—ñ–≤—ñ–≤</div>';
	}
	echo '</div>';

	// –ü–ª–∞–Ω/–ø–æ–ª—ñ—Ç–∏–∫–∞
	echo '<div class="crit-card">';
	echo '<h3>–ü–æ–ª—ñ—Ç–∏–∫–∞ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è</h3>';
	echo '<div class="crit-kpi">'.esc_html($days_opt).' –¥–Ω—ñ–≤</div>';
	echo '<div class="crit-sub">–ú–∞–∫—Å. –∞—Ä—Ö—ñ–≤—ñ–≤: '.$keep_opt.' ‚Ä¢ –õ—ñ–º—ñ—Ç —Ñ–∞–π–ª—É: '.$size_opt.' –ú–ë</div>';
	if ($next_cron) {
		echo '<div class="crit-sub" style="margin-top:6px">–ù–∞—Å—Ç—É–ø–Ω–∏–π WP-Cron: '.esc_html(date_i18n('Y-m-d H:i:s', $next_cron)).'</div>';
	}
	echo '</div>';

	echo '</div>'; // .crit-grid

	// ===== –°–ø–∏—Å–æ–∫ –∞—Ä—Ö—ñ–≤—ñ–≤ =====
	if ($archives) {
		echo '<div class="crit-card" style="margin-top:8px">';
		echo '<h3>–û—Å—Ç–∞–Ω–Ω—ñ –∞—Ä—Ö—ñ–≤–∏</h3>';
		echo '<table class="widefat striped crit-table"><thead><tr>
				<th>–§–∞–π–ª</th><th style="width:160px">–î–∞—Ç–∞</th><th style="width:120px;text-align:right">–†–æ–∑–º—ñ—Ä</th>
			  </tr></thead><tbody>';
		foreach (array_slice($archives, 0, 10) as $f) {
			$bn  = basename($f);
			$t   = @filemtime($f);
			$sz  = @filesize($f);
			echo '<tr>
					<td class="crit-mono">'.esc_html($bn).'</td>
					<td>'.esc_html($t ? date_i18n('Y-m-d H:i:s', $t) : '‚Äî').'</td>
					<td style="text-align:right">'.esc_html(crit_human_bytes($sz)).'</td>
				  </tr>';
		}
		echo '</tbody></table>';
		echo '</div>';
	}

	// ===== –§–æ—Ä–º–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å =====
	$size  = get_option('crit_log_max_size', 5);
	$files = get_option('crit_log_keep_files', 7);
	$days  = get_option('crit_log_max_days', 30);

	echo '<form method="post" style="margin-top:14px">';
	wp_nonce_field('crit_log_rotation_save', 'crit_log_rotation_nonce');
	echo '<p><label>üì¶ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –ª–æ–≥-—Ñ–∞–π–ª—É (–ú–ë): 
			<input type="number" name="crit_log_max_size" value="' . esc_attr($size) . '" min="1" max="100" style="width:90px">
		  </label></p>';
	echo '<p><label>üßæ –ó–±–µ—Ä—ñ–≥–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö —Ñ–∞–π–ª—ñ–≤: 
			<input type="number" name="crit_log_keep_files" value="' . esc_attr($files) . '" min="1" max="30" style="width:90px">
		  </label></p>';
	echo '<p><label>üïê –í–∏–¥–∞–ª—è—Ç–∏ –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ä—à–µ (–¥–Ω—ñ–≤): 
			<input type="number" name="crit_log_max_days" value="' . esc_attr($days) . '" min="1" max="365" style="width:90px">
		  </label></p>';
	echo '<p><input type="submit" name="crit_save_rotation" class="button-primary" value="üíæ –ó–±–µ—Ä–µ–≥—Ç–∏"></p>';
	echo '</form>';

	echo '</p><a href="?page=critical-log-rotation&crit_run_rotation=1" class="button">üîÅ –í–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞—Ä–∞–∑</a><hr><p style="color:#777;">–†–æ—Ç–∞—Ü—ñ—è –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–∞–∑ –Ω–∞ –¥–æ–±—É —á–µ—Ä–µ–∑ WP-Cron. ';

	// –†—É—á–Ω–∏–π –∑–∞–ø—É—Å–∫ (—è–∫ —ñ –±—É–ª–æ)
	if (isset($_GET['crit_run_rotation']) && current_user_can('manage_options')) {
		echo '<div class="notice notice-info"><p>üîÑ –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è —Ä–æ—Ç–∞—Ü—ñ—è –ª–æ–≥—ñ–≤...</p></div>';
		try {
			ob_start();
			crit_rotate_logs(true);
			ob_end_clean();
			echo '<div class="notice notice-success"><p>‚úÖ –†–æ—Ç–∞—Ü—ñ—é –≤–∏–∫–æ–Ω–∞–Ω–æ –≤—Ä—É—á–Ω—É —É—Å–ø—ñ—à–Ω–æ.</p></div>';
		} catch (Throwable $e) {
			echo '<div class="notice notice-error"><p>‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ—Ç–∞—Ü—ñ—ó: ' . esc_html($e->getMessage()) . '</p></div>';
		}
	}

	echo '</div>'; // .wrap
}

