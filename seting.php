<?php
/**
 * Critical Event Logger ‚Äî helper module
 * Copyright ¬© 2025 –ö–∞–∑–º—ñ—Ä—á—É–∫ –ê–Ω–¥—Ä—ñ–π
 * License: GPLv2 or later
 * License URI: https://www.gnu.org/licenses/gpl-2.0.html
 */
if (!defined('ABSPATH')) exit;

/* ---------------- –•–µ–ª–ø–µ—Ä–∏ ---------------- */

function crit_mask_key($k) {
	if (empty($k)) return '';
	$len = strlen($k);
	if ($len <= 12) return substr($k, 0, 3) . '...' . substr($k, -3);
	return substr($k, 0, 6) . '...' . substr($k, -6);
}

/** –Ñ–î–ò–ù–ò–ô –≥–µ—Ç—Ç–µ—Ä ‚Äî —á–∏—Ç–∞—î–º–æ –õ–ò–®–ï –∑ –ë–î */
function crit_get_api_key_value(string $option_name): string {
	return trim((string) get_option($option_name, ''));
}

/** –î–ª—è UI (–¥–∂–µ—Ä–µ–ª–æ –∑–∞–≤–∂–¥–∏ DB –∞–±–æ '') */
function crit_get_api_key_with_source(string $option_name): array {
	$val = crit_get_api_key_value($option_name);
	return $val !== '' ? ['value' => $val, 'source' => 'db'] : ['value' => '', 'source' => ''];
}

/* –û—á–∏—â–µ–Ω–Ω—è —Ç—Ä–∞–Ω–∑—ñ—î–Ω—Ç—ñ–≤ */
function crit_delete_transients_by_prefix(string $prefix): void {
	global $wpdb;
	$like_main = $wpdb->esc_like('_transient_' . $prefix) . '%';
	$like_to   = $wpdb->esc_like('_transient_timeout_' . $prefix) . '%';
	$wpdb->query(
		$wpdb->prepare(
			"DELETE FROM {$wpdb->options}
			 WHERE option_name LIKE %s OR option_name LIKE %s",
			$like_main, $like_to
		)
	);
}

function crit_purge_all_intel_caches(): void {
	crit_delete_transients_by_prefix('crit_intel_'); // —ñ–Ω—Ç–µ–ª-—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
	crit_delete_transients_by_prefix('crit_geo_');   // –≥–µ–æ
	crit_delete_transients_by_prefix('crit_pool_');  // RDAP/RIPE/WHOIS –ø—É–ª
}

/* ---------------- –ú–µ–Ω—é ---------------- */

add_action('admin_menu', function () {
	add_submenu_page(
		'critical-event-logs',
		'Critical Logger ‚Äî –ö–ª—é—á—ñ API',
		'API Keys',
		'manage_options',
		'critical-logger-keys',
		'crit_keys_settings_page'
	);
});

/* ---------------- –°—Ç–æ—Ä—ñ–Ω–∫–∞ ---------------- */

function crit_keys_settings_page() {
	if (!current_user_can('manage_options')) wp_die('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤');

	$notice = '';

	/* ======= –î—ñ—ó –¥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ======= */

	// 1) –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –∫–ª—é—á (–ë–î)
	if (isset($_POST['crit_key_action']) && $_POST['crit_key_action'] === 'clear_db') {
		check_admin_referer('crit_keys_actions', 'crit_keys_nonce');

		$map = [
			'abuseipdb' => ['opt' => 'crit_abuseipdb_key', 'label' => 'AbuseIPDB'],
			'virustotal'=> ['opt' => 'crit_virustotal_key','label' => 'VirusTotal'],
			'crowdsec'  => ['opt' => 'crit_crowdsec_key',  'label' => 'CrowdSec'],
			'openai'    => ['opt' => 'crit_openai_key',    'label' => 'OpenAI'],
		];

		$key_id = sanitize_key($_POST['key_id'] ?? '');
		if (isset($map[$key_id])) {
			delete_option($map[$key_id]['opt']);
			$notice .= '<div class="notice notice-success"><p>üóë –í–∏–¥–∞–ª–µ–Ω–æ –∑ –ë–î: ' . esc_html($map[$key_id]['label']) . '</p></div>';
			crit_purge_all_intel_caches();
			$notice .= '<div class="notice notice-info"><p>üßΩ –û—á–∏—â–µ–Ω–æ –∫–µ—à—ñ —ñ–Ω—Ç–µ–ª/–≥–µ–æ/–ø—É–ª.</p></div>';
		} else {
			$notice .= '<div class="notice notice-error"><p>–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–ª—é—á.</p></div>';
		}
	}

	// 2) –ì–ª–æ–±–∞–ª—å–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É
	if (isset($_POST['crit_flush_caches'])) {
		check_admin_referer('crit_keys_actions', 'crit_keys_nonce');
		crit_purge_all_intel_caches();
		$notice .= '<div class="notice notice-success"><p>üßΩ –ö–µ—à –æ—á–∏—â–µ–Ω–æ: —ñ–Ω—Ç–µ–ª/–≥–µ–æ/–ø—É–ª.</p></div>';
	}

	/* ======= –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–ª—é—á—ñ–≤ —É –ë–î ======= */
	if (isset($_POST['crit_keys_save'])) {
		check_admin_referer('crit_keys_save_action', 'crit_keys_save_nonce');

		$in = [
			'abuseipdb' => sanitize_text_field($_POST['crit_abuseipdb_key'] ?? ''),
			'virustotal'=> sanitize_text_field($_POST['crit_virustotal_key'] ?? ''),
			'crowdsec'  => sanitize_text_field($_POST['crit_crowdsec_key'] ?? ''),
			'openai'    => sanitize_text_field($_POST['crit_openai_key'] ?? ''),
		];

		// –ü–∏—à–µ–º–æ –ª–∏—à–µ –Ω–µ–ø–æ—Ä–æ–∂–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (—â–æ–± –≤–∏–ø–∞–¥–∫–æ–≤–µ –ø–æ—Ä–æ–∂–Ω—î –Ω–µ –∑–∞—Ç–µ—Ä–ª–æ —ñ—Å–Ω—É—é—á–∏–π –∫–ª—é—á)
		if ($in['abuseipdb'] !== '') update_option('crit_abuseipdb_key', $in['abuseipdb']);
		if ($in['virustotal'] !== '') update_option('crit_virustotal_key', $in['virustotal']);
		if ($in['crowdsec']   !== '') update_option('crit_crowdsec_key',   $in['crowdsec']);
		if ($in['openai']     !== '') update_option('crit_openai_key',     $in['openai']);

		$notice .= '<div class="notice notice-success"><p>‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É –ë–î.</p></div>';

		// –ü—ñ—Å–ª—è –∑–º—ñ–Ω –∫–ª—é—á—ñ–≤ ‚Äî –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à, —â–æ–± —ñ–Ω—Ç–µ–ª –æ–¥—Ä–∞–∑—É –ø—ñ–¥—Ö–æ–ø–∏–≤ –Ω–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
		crit_purge_all_intel_caches();
		$notice .= '<div class="notice notice-info"><p>üßΩ –û—á–∏—â–µ–Ω–æ –∫–µ—à—ñ —ñ–Ω—Ç–µ–ª/–≥–µ–æ/–ø—É–ª.</p></div>';
	}

	/* ======= –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω ======= */
	$keys = [
		'abuseipdb' => crit_get_api_key_with_source('crit_abuseipdb_key'),
		'virustotal'=> crit_get_api_key_with_source('crit_virustotal_key'),
		'crowdsec'  => crit_get_api_key_with_source('crit_crowdsec_key'),
		'openai'    => crit_get_api_key_with_source('crit_openai_key'),
	];

	$badge = function($source) {
		if ($source === 'db') return ' <span class="dashicons dashicons-database"></span> <em style="color:#555;">DB</em>';
		return ' <em style="color:#888;">(–Ω–µ –∑–∞–¥–∞–Ω–æ)</em>';
	};

	echo '<div class="wrap">';
	echo '<h1>üîê Critical Logger ‚Äî API Keys</h1>';
	echo $notice;

	/* ======= –§–æ—Ä–º–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ======= */
	echo '<form method="post" action="">';
	wp_nonce_field('crit_keys_save_action', 'crit_keys_save_nonce');

	echo '<table class="form-table">';

	// AbuseIPDB
	echo '<tr><th>
			<label for="crit_abuseipdb_key">AbuseIPDB API Key</label><br>
			<a class="button button-small" target="_blank" rel="noopener noreferrer" href="https://www.abuseipdb.com/account/api">–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª—é—á</a>
		</th><td>';
	echo '<input type="text" id="crit_abuseipdb_key" name="crit_abuseipdb_key" value="" style="width:420px;" autocomplete="off">';
	if ($keys['abuseipdb']['value'] !== '') {
		echo '<p class="description">–ó–±–µ—Ä–µ–∂–µ–Ω–æ: <code>' . esc_html(crit_mask_key($keys['abuseipdb']['value'])) . '</code>' . $badge($keys['abuseipdb']['source']) . '</p>';
	} else {
		echo '<p class="description">–í–≤–µ–¥–∏ –∫–ª—é—á —ñ –Ω–∞—Ç–∏—Å–Ω–∏ ‚Äú–ó–±–µ—Ä–µ–≥—Ç–∏‚Äù.</p>';
	}
	echo '</td></tr>';

	// VirusTotal
	echo '<tr><th>
			<label for="crit_virustotal_key">VirusTotal API Key</label><br>
			<a class="button button-small" target="_blank" rel="noopener noreferrer" href="https://www.virustotal.com/gui/my-apikey">–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª—é—á</a>
		</th><td>';
	echo '<input type="text" id="crit_virustotal_key" name="crit_virustotal_key" value="" style="width:420px;" autocomplete="off">';
	if ($keys['virustotal']['value'] !== '') {
		echo '<p class="description">–ó–±–µ—Ä–µ–∂–µ–Ω–æ: <code>' . esc_html(crit_mask_key($keys['virustotal']['value'])) . '</code>' . $badge($keys['virustotal']['source']) . '</p>';
	} else {
		echo '<p class="description">–í–≤–µ–¥–∏ –∫–ª—é—á —ñ –Ω–∞—Ç–∏—Å–Ω–∏ ‚Äú–ó–±–µ—Ä–µ–≥—Ç–∏‚Äù.</p>';
	}
	echo '</td></tr>';

	// CrowdSec
	echo '<tr><th>
			<label for="crit_crowdsec_key">CrowdSec API Key</label><br>
			<a class="button button-small" target="_blank" rel="noopener noreferrer" href="https://app.crowdsec.net/">–°—Ç–≤–æ—Ä–∏—Ç–∏/–ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–ª—é—á</a>
		</th><td>';
	echo '<input type="text" id="crit_crowdsec_key" name="crit_crowdsec_key" value="" style="width:420px;" autocomplete="off">';
	if ($keys['crowdsec']['value'] !== '') {
		echo '<p class="description">–ó–±–µ—Ä–µ–∂–µ–Ω–æ: <code>' . esc_html(crit_mask_key($keys['crowdsec']['value'])) . '</code>' . $badge($keys['crowdsec']['source']) . '</p>';
	} else {
		echo '<p class="description">–í–≤–µ–¥–∏ –∫–ª—é—á —ñ –Ω–∞—Ç–∏—Å–Ω–∏ ‚Äú–ó–±–µ—Ä–µ–≥—Ç–∏‚Äù.</p>';
	}
	echo '</td></tr>';

	// OpenAI
	echo '<tr><th>
			<label for="crit_openai_key">OpenAI API Key</label><br>
			<a class="button button-small" target="_blank" rel="noopener noreferrer" href="https://platform.openai.com/api-keys">–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª—é—á</a>
		</th><td>';
	echo '<input type="text" id="crit_openai_key" name="crit_openai_key" value="" style="width:420px;" autocomplete="off">';
	if ($keys['openai']['value'] !== '') {
		echo '<p class="description">–ó–±–µ—Ä–µ–∂–µ–Ω–æ: <code>' . esc_html(crit_mask_key($keys['openai']['value'])) . '</code>' . $badge($keys['openai']['source']) . '</p>';
	} else {
		echo '<p class="description">–í–≤–µ–¥–∏ –∫–ª—é—á —ñ –Ω–∞—Ç–∏—Å–Ω–∏ ‚Äú–ó–±–µ—Ä–µ–≥—Ç–∏‚Äù.</p>';
	}
	echo '</td></tr>';

	echo '</table>';

	echo '<p><input type="submit" name="crit_keys_save" class="button button-primary" value="üíæ –ó–±–µ—Ä–µ–≥—Ç–∏"></p>';
	echo '</form>';

	/* ======= –ë–ª–æ–∫ ‚Äú–û—á–∏—Å—Ç–∏—Ç–∏ –∫–ª—é—á—ñ (–ë–î)‚Äù + ‚Äú–û—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à‚Äù ======= */
	echo '<h2 style="margin-top:24px;">üßπ –°–µ—Ä–≤—ñ—Å–Ω—ñ –¥—ñ—ó</h2>';
	echo '<p class="description">–ö–ª—é—á—ñ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —É –ë–î. –¢—É—Ç –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –æ–∫—Ä–µ–º–∏–π –∫–ª—é—á —Ç–∞ –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à —ñ–Ω—Ç–µ–ª/–≥–µ–æ/–ø—É–ª.</p>';

	echo '<table class="widefat striped" style="max-width:800px">';
	echo '<thead><tr><th>–°–µ—Ä–≤—ñ—Å</th><th>–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω</th><th style="width:260px">–î—ñ—ó</th></tr></thead><tbody>';

	$rows = [
		['id' => 'abuseipdb', 'label' => 'AbuseIPDB', 'k' => $keys['abuseipdb']],
		['id' => 'virustotal','label' => 'VirusTotal','k' => $keys['virustotal']],
		['id' => 'crowdsec',  'label' => 'CrowdSec',  'k' => $keys['crowdsec']],
		['id' => 'openai',    'label' => 'OpenAI',    'k' => $keys['openai']],
	];

	foreach ($rows as $r) {
		echo '<tr>';
		echo '<td><strong>' . esc_html($r['label']) . '</strong></td>';
		if ($r['k']['value'] !== '') {
			echo '<td><code>' . esc_html(crit_mask_key($r['k']['value'])) . '</code> <span class="dashicons dashicons-database"></span> <em style="color:#555;">DB</em></td>';
		} else {
			echo '<td><em style="color:#888;">(–Ω–µ –∑–∞–¥–∞–Ω–æ)</em></td>';
		}
		echo '<td>';
			echo '<form method="post" style="display:inline">';
			wp_nonce_field('crit_keys_actions','crit_keys_nonce', true, true);
			echo '<input type="hidden" name="key_id" value="' . esc_attr($r['id']) . '">';
			echo '<button class="button" name="crit_key_action" value="clear_db" onclick="return confirm(\'–í–∏–¥–∞–ª–∏—Ç–∏ –∫–ª—é—á ' . esc_attr($r['label']) . ' –∑ –ë–î?\');">–û—á–∏—Å—Ç–∏—Ç–∏ –∫–ª—é—á (–ë–î)</button>';
			echo '</form>';
		echo '</td>';
		echo '</tr>';
	}
	echo '</tbody></table>';

	// –û–î–ù–ê –≥–ª–æ–±–∞–ª—å–Ω–∞ –∫–Ω–æ–ø–∫–∞ ‚Äú–û—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à‚Äù
	echo '<form method="post" style="margin-top:12px;">';
	wp_nonce_field('crit_keys_actions','crit_keys_nonce', true, true);
	echo '<input type="hidden" name="crit_flush_caches" value="1">';
	echo '<button class="button button-secondary">üßΩ –û—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à —ñ–Ω—Ç–µ–ª/–≥–µ–æ/–ø—É–ª</button>';
	echo '</form>';

	echo '<hr><p style="color:#666">–ü—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ –º–æ–¥—É–ª—å —á–∏—Ç–∞—î –∫–ª—é—á—ñ –¢–Ü–õ–¨–ö–ò –∑ –ë–î.</p>';
	echo '</div>';
}
